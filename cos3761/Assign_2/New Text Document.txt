Q1.1 ∀x(S(x)→¬L(x,k))
.2 ∀x(S(x)→∃y(S(y)∧L(x,y)))
.3 ∀x(S(x)→(∃y(C(y)∧T(x,y))→∃z(G(z)∧T(x,z))))
.4 ∃y(C(y)∧T(k,y))∧¬∃y(C(y)∧T(b,y))
.5 ∃x(S(x)∧G(y)∧T(x,y))

Q2.1 There is exactly one student who takes Geometry
.2 There is atleast one computer class that no student takes.
.3 Every student takes atleast one subject.
.4 Kevin loves all students.

Q3.1 wff
.2 wff
.3 wff
.4 wff
.5 wff
.6 wff
.7 term

Q4.1         →
            / \
           ∃   ∀
          /     \
         x      y
        /       / \
       →       ∃   ∧
     / \      / \ / \
   ¬    Q    z  Q P  P
       / \           \
      P   Q           y
     / \ / \
     x   y z

.2
1)In this substitution, we replace all occurrences of the variable "x" with the term f(z). This doesn't create a problem because f(z) is a term, and it can be substituted for any variable. Therefore, the substituted formula is:

2) In this substitution, we replace all occurrences of the variable "y" with the term f(z). This substitution can create a problem if In this substitution, we replace all occurrences of the variable "y" with the term f(z). This substitution can create a problem if f(z) contains any bound occurrences of "y" within the scope of quantifiers. However, since f(z) is a function term and not a variable, it shouldn't cause any problems with variable capture. Therefore, the substituted formula is:f(z) contains any bound occurrences of "y" within the scope of quantifiers. However, since f(z) is a function term and not a variable, it shouldn't cause any problems with variable capture. Therefore, the substituted formula is:
∃x(¬P(x,f(z))→Q(x,f(z),z))→∀y∃z(Q(x,x,x)∧P(x,f(z)))

3) In this substitution, we replace all occurrences of the variable "y" with the term f(x). However, this substitution can create a problem if f(x) contains any bound occurrences of "y" within the scope of quantifiers. To avoid this problem, we need to rename the bound variable "y" within the scope of the quantifiers. Let's rename it to a fresh variable, say "y'". Then the substituted formula becomes:
∃x(¬P(x,y′)→Q(x,y′,z))→∀y∃z(Q(x,x,x)∧P(x,f(x)))

Q.5
For all x, if Q(x,f(x)) then ¬Q(f(x),x):
If x is less than its successor, then the successor is not less than x. This holds true in the set of integers since for any integer x<x+1 and x+1 is not less than x.

There exists an x such that S(x) and ¬∀yQ(x,y):
Let x=0. S(0) holds true since 0 is even. Also, for any integer y, there exists an integer greater than y (such as y+1). Therefore, Q(0,y) does not hold for all y.

Q.6.1
Model Construction:
Universe A: The set of all integers, Z.
Interpretation of R: Define R(x,y) as x<y.

Verification:
R(x,y) means x<y.
R(y,x) means y<x.

R(x,y)∨R(y,x) means x<y or y<x. This is true for all distinct x and y in Z.

Therefore, the implication (R(x,y)∨R(y,x))→¬(R(x,y)∧R(y,x)) is true for all x and y in Z under this interpretation.

.2 R(x,y)∧R(y,x) would mean x<y and y<x. This is always false for any x and y because it is impossible for x to be both less than and greater than y simultaneously.

Q.7
For every x∈A, I have found a y∈A such that R(x,y)∧R(y,y) holds. Therefore, the model M satisfies the sentence ∀x∃y(R(x,y)∧R(y,y)).

Q.8.1
Given that ∀x(R(x)→Q(x)) being true implies that for all R(x) is true then Q(x) must be true, and given that ∀x(R(x)∨Q(x)) being false implies there exists some Q(a) are false, these conditions are contradictory. Therefore, you cannot find a model where the left-hand side is true and the right-hand side is false simultaneously. Thus, it is impossible to disprove the validity of the sequent ∀x(R(x)→Q(x))⊢∀x(R(x)∨Q(x)) by finding a mathematical model where the formula to the left of ⊢ evaluates to true and the formula to the right of ⊢ evaluates to false.

.2 It is indeed possible to find a model where the left formula is true and the right formula is false. This means that the sequent: ∀x∀y(S(x,y)→¬S(y,x))⊢∀xS(x,x) is not valid, as it is possible to have a situation where the left side is true and the right side is false, thus disproving the validity by finding a non-mathematical model.

9.1
∃xF(x)∨∃xG(x) (Premise)
Assume ∃xF(x) (Assumption for ∨-Elimination)
F(a) (Existential Instantiation from 2)
F(a)∨G(a) (∨-Introduction from 3)
∃x(F(x)∨G(x)) (∃-Introduction from 4)
Assume ∃xG(x) (Assumption for ∨-Elimination)
G(b) (Existential Instantiation from 6)
F(b)∨G(b) (∨-Introduction from 7)
∃x(F(x)∨G(x)) (∃-Introduction from 8)
∃x(F(x)∨G(x)) (∨-Elimination from 1, 2-5, 6-9)
Thus, we have shown that ∃xF(x)∨∃xG(x)⊢∃x(F(x)∨G(x)).

9.2
∀x(P(x)∨Q(x)) (Premise)
∀x(¬P(x)) (Premise)
Assume an arbitrary element a (Assumption for Universal Generalization)
P(a)∨Q(a) (Universal Instantiation from 1)
¬P(a) (Universal Instantiation from 2)
From P(a)∨Q(a) and ¬P(a), by disjunction elimination (∨-Elimination), we get Q(a).
Suppose P(a) (assumption for ∨-Elimination)
P(a) contradicts ¬P(a), hence Q(a) must be true.
Q(a) (From 6)
Since a was arbitrary, ∀xQ(x) (Universal Generalization from 7)
Thus, we have shown that ∀x(P(x)∨Q(x)),∀x(¬P(x))⊢∀xQ(x).

9.3
∀x∀y∀z((S(x,y)∧S(y,z))→S(x,z)) (Premise)
∀x¬S(x,x) (Premise)
Assume arbitrary elements a and b (Assumption for Universal Generalization)
Assume S(a,b) (Assumption for Implication Introduction)
Assume S(b,a) (Assumption for Contradiction)
Instantiate the first premise to a, b, and a: (S(a,b)∧S(b,a))→S(a,a)
From S(a,b) and S(b,a), we get S(a,a) (Modus Ponens from 6)
¬S(a,a) (Universal Instantiation from 2)
S(a,a)∧¬S(a,a) (Contradiction from 7 and 8)
Therefore, ¬S(b,a) (Negation Introduction from 5-9)
S(a,b)→¬S(b,a) (Implication Introduction from 4-10)
Since a and b were arbitrary, ∀x∀y(S(x,y)→¬S(y,x)) (Universal Generalization from 3-11)
Thus, we have shown that ∀x∀y∀z((S(x,y)∧S(y,z))→S(x,z)),∀x¬S(x,x)⊢∀x∀y(S(x,y)→¬S(y,x)).

9.4
∀x ∀y (Q(y) → F(x)) (given premise)
∃y Q(y) (assume for conditional proof)
y (assume for existential instantiation)
Q(y) (from 2, existential instantiation)
∀x F(x) (from 1, universal instantiation twice: ∀y (Q(y) → F(x)), Q(y))
∃y Q(y) → ∀x F(x) (from 2-5, conditional proof)
∀x ∀y (Q(y) → F(x)) ├ ∃y Q(y) → ∀x F(x) (discharge all assumptions)

9.5
∀x (P(x) ∧ Q(x)) (given premise)
x (assume for universal generalization)
(P(x) ∧ Q(x)) (from 1, universal instantiation)
P(x) (from 3, conjunction elimination)
Q(x) (from 3, conjunction elimination)
(P(x) → Q(x)) (from 4, 5, conditional introduction)
∀x (P(x) → Q(x)) (from 2, 6, universal generalization)
∀x (P(x) ∧ Q(x)) ├ ∀x (P(x) → Q(x)) (discharge assumption x)